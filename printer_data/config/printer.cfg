################################################################
##        Ender 3 Max with SKR Mini E3 V3 and BLTouch          #
################################################################

[virtual_sdcard]
path: ~/gcode_files

# Enable object exclusion
[exclude_object]

[include Adaptive_Mesh.cfg]
[include KAMP_Settings.cfg]
#[include adxl.cfg] # Comment this out when you disconnect the accelerometer

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 39.900
endstop_pin: ^PC0
position_endstop: 0
position_max: 300
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.7
hold_current: 0.42
#stealthchop_threshold: 9999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 39.850
endstop_pin: ^PC1
position_endstop: 0
position_max: 300
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 1.6 #0.680
hold_current: 0.93
#stealthchop_threshold: 9999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8.020
endstop_pin: probe:z_virtual_endstop
position_max: 340
position_min: -2

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 1.2
hold_current: 0.71
#stealthchop_threshold: 9999

[bltouch] 
sensor_pin: ^PC14
control_pin: PA1
#pin_up_touch_mode_reports_triggered: False
#stow_on_each_sample: False
probe_with_touch_mode: False
x_offset: 50                         # modify as needed for bltouch location
y_offset: -8                        # modify as needed for bltouch location
#z_offset: 3.0                        # modify as needed for bltouch or run PROBE_CALIBRATE; More positive = lower nozzle
speed: 10
samples: 2
sample_retract_dist: 5.0             # Can be set lower, example 2.5 depending on height of bltouch from bed
lift_speed: 40
samples_tolerance_retries: 3
speed: 10
samples: 2

[safe_z_home]
home_xy_position: 150,150            # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                            # Move up 10mm
z_hop_speed: 5

[bed_mesh]                            # enable for BLTouch
speed: 150
mesh_min: 50, 0
mesh_max: 290, 290
algorithm: bicubic
probe_count: 15,15                      # 49 points due to large bed size
horizontal_move_z: 5

#[screws_tilt_adjust]
#horizontal_move_z: 10
#screw1: 0,285
#screw1_name: back left
#screw2: 223,285
#screw2_name: back right
#screw3: 0,44
#screw3_name: front left
#screw4: 223,44
#screw4_name: front right

[bed_screws]
screw1: 35, 35
screw2: 275, 35
screw3: 35, 275
screw4: 275, 275

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 7.3480212         # See below section for rotation_distance adjustment procedure
nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance = 0.5406                # Tune pressure advance AFTER resonance tuning
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 26.399
#pid_Ki: 1.491
#pid_Kd: 116.816
min_temp: 0
max_temp: 300
max_extrude_only_distance: 700.0

### To tune extruder step_distance:
## mark 120mm from extruder entrance
## M83
## G1 E100 F100
## ((120 - measured) / 100) * current_step_distance

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.7
#stealthchop_threshold: 999999

#[filament_switch_sensor my_sensor] #Sensor original 
#pause_on_runout: True
#runout_gcode: UNLOAD
#insert_gcode: LOAD
#event_delay: 5.0
#pause_delay: 0.5
#switch_pin: PC15

[filament_switch_sensor switch_sensor] #Sensor BBT SFS V2
switch_pin: ^PC12 # as shown in Figure 2, switch sensor IO is PA0
pause_on_runout: False
runout_gcode:
  PAUSE #[pause_resume] is required in printer.cfg
  M117 F switch runout
insert_gcode:
  M117 F switch inserted

[filament_motion_sensor encoder_sensor] #Sensor BBT SFS V2
switch_pin: ^PC15 # as shown in Figure 2, motion sensor IO is PC2
detection_length: 4.88 # accuracy of motion sensor 2.88mmextruder: extruder
extruder: extruder
pause_on_runout: False
runout_gcode:
  PAUSE # [pause_resume] is required in printer.cfg
  M117 F encoder runout
insert_gcode:
  M117 F encoder inserted

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F 
sensor_pin: PC4
#control: pid
#pid_Kp: 70.997
#pid_Ki: 1.174
#pid_Kd: 1072.948
min_temp: 0
max_temp: 130

[heater_fan nozzle_cooling_fan] #FAN1
pin: PC7

#[controller_fan stepper_fan] #FAN2 
[heater_fan controller_fan]
pin: PB15
#idle_timeout: 30
#stepper: stepper_x,stepper_y,stepper_z
heater: heater_bed         
heater_temp: 45.0          

[fan]   #FAN0
pin: PC6

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[mcu] 
serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.1:1.0  # Enter your MCU serial, not this one

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 7000
minimum_cruise_ratio: 0.5
#max_accel_to_decel: 3500
max_z_velocity: 5
max_z_accel: 100


[input_shaper]
shaper_freq_x: 70.4
shaper_type_x: mzv
shaper_freq_y: 31.8
shaper_type_y: mzv

###### Uncomment for resonance tuning with ADXL (After software setup) ######

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    150, 150, 10  # an example

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[mpu9250]
#i2c_mcu: rpi
#i2c_bus: i2c.1

#[resonance_tester]
#accel_chip: mpu9250
#probe_points:
#    100, 100, 20  # an example

[board_pins]
aliases:
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: PB5
#pwm: True
#value: 0 #   Silent at power on
#shutdown_value: 0 #   Disable at emergency shutdown
#cycle_time: 0.001

#[include adxl.cfg]



################################################################
##                           Macros                            #
################################################################

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max position from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE

[gcode_macro M600]
gcode:
    PAUSE
    UNLOAD

[gcode_macro UNLOAD_FILAMENT]
gcode:
    M83                   # Put the extruder into relative mode
    G92 E0.0              # Reset the extruder so that it thinks it is at position zero
    G1 E-600 F600          # Move the extruder forward 120mm at a speed of 350mm/minute
    G92 E0.0              # Reset the extruder again
    M82                   # Put the extruder back into absolute mode.

[gcode_macro LOAD_FILAMENT]
gcode:
    M83                   # Put the extruder into relative mode
    G92 E0.0              # Reset the extruder so that it thinks it is at position zero
    G1 E500 F600          # Move the extruder forward 120mm at a speed of 350mm/minute
    G92 E0.0              # Reset the extruder again
    M82                   # Put the extruder back into absolute mode.

[gcode_macro PURGE]
gcode:
    G91
    G1 E100 F5
    G90

[gcode_macro CALIBRAR_Z_OFFSET]
gcode:
    G28
    PROBE_CALIBRATE

[gcode_macro LEVEL_BED]
gcode:
    G28
    BED_SCREWS_ADJUST

[gcode_macro SALVAR_CONFIG]
gcode:
    SAVE_CONFIG

# Below three POWER_OFF_PRINTER, DELAYED_PRINTER_OFF, AND IDLE_TIMEOUT all for use with WIFI power plug 
# (I use Kasa H103) which needs to be configured in Moonraker.cfg.  Using Cura2Moonraker plugin you
# can turn on printer when print sent from Cura.  My Moonraker.cfg power plug setting follows:

 #[power Green Max_Power]               # Rename macro to your liking
 #type: tplink_smartplug
 #address: 192.168.1.146                # Enter your Kasa power plug local IP here
 #on_when_job_queued: True
 #locked_while_printing: False
 #restart_klipper_when_powered: True
 #bound_service: klipper
 #off_when_shutdown: True
 #off_when_shutdown_delay: 60          # Turn off printer 180 seconds after print completion, change as desired


#[gcode_macro POWER_OFF_PRINTER]  
#gcode:
#  {action_call_remote_method("set_device_power",
#                             device="Green Max_Power",  # Enter your power plug name here
#                             state="off")}

[delayed_gcode delayed_printer_off]
initial_duration: 180                   # Turns off printer after 180 seconds idle, change as desired
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[idle_timeout]
gcode:
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=180  # Turns off printer after 180 seconds idle, change as desired

[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %}
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=beeper VALUE={S}
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0

[gcode_macro LOAD_MESH]
gcode:
    BED_MESH_PROFILE LOAD=default

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 30.272
#*# pid_ki = 2.147
#*# pid_kd = 106.708
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 67.730
#*# pid_ki = 1.220
#*# pid_kd = 939.756
#*#
#*# [bltouch]
#*# z_offset = 1.357
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.003759, -0.036341, -0.047619
#*# 	  -0.003759, -0.015038, -0.063909
#*# 	  0.003759, 0.001253, -0.057644
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 140.2
#*# max_x = 159.79999999999998
#*# min_y = 140.196
#*# max_y = 159.816
